The program utulizes monotors and locks to simulate a network on iternatcions between parents, student, office, vendingmachines, banks and plant. The goal of this program is to concurrently execute the relationship represented by the network.

Input testing:
====================
The execution of the game is as following format:
./1soda [confid-files[random-seed(>0)]]

Based on the specification, all possible combinations of inputs are:
./soda 
./soda config-file
./soda config-file (seed > 0)

The input is tested by giving:
- only running soda : executes normally
- running soda with valid config file : executes normally
- running soda with invalid config file: error is thrown when reading from file
- running soda with valid config file and seed > 0: executes normally
- running soda with valid config file and seed <= 0: usage error is displayed

The response of the program to various input styles matches the expected behavior document
by the assignment, thus, the program passes the input test.

Output Testing
======================
Although a sample program is given in the assignment, the output is different between the sample and our program. This is due to ordering of calls to tasks, and by the number of calls to random number function in the program. 
Thus, evenough the output of our program may be different from the sample, the result can still be valid as long as each of the tasks/monitors follows the guideline set in the assuignment.

*The program passed a batch file that was created to test seed from 1 to 1000 to check that the program does not crash.

Parent:
========
Parent is verified by checking the gift ammount is between $1-3 to a random student. Since the program demonstrated this behavior, the parent task can be considered working

Groupoff:
========
Groupoff gives a student a giftcard with sodacost amount on it. The giftcard is only given once to each student. Since the expected behavior matches the actual behavior, groupoff can be considered working.

WATOff + Cour
=============
Watoffice creates a card for a student that either 1) just started or 2) lost their card. The observed behaviour of the program is that when a student first started, a card is set to be created by the office. This task is then passed to cour to be completed.  
Since this matches the expected behavior of the office and cour, both task can be considered working. 

Truck Plant:
============
-Since the plant is responsible for creating teh truck, it is observed that plant starts before the truck task. A value that was checked was that plant only create between 4 to 4*maxperflavour number of soda each time. this is verified by checking the value G(x) to ensure x is within the range, 
-For truck, it is checked that the truck will pickup x ammount from the plant AFTER the plant finished production for that batch. Then it is verifyed that the truck begins by delivering to the first vending machine and continues in a circular fashion so that each vending machine is stocked. 
This is verifyed by increaing the number of vending machines and checking that the truck visites an increaing id of vending machine on every delivery.
-For plant, it is then verifyed that new products are only made after the truck has picked up the previous products

Students + NameServer:
====================
When a student request the nameserver to have locate a machine, it is observed that the nameserver gives the next machine based on the roundrobin format of assigning vending machine.

Parent  Gropoff WATOff  Names   Truck   Plant   Stud0   Stud1   Mach0   Cour0
******* ******* ******* ******* ******* ******* ******* ******* ******* *******
S       S       S       S                                               S
                        R0              S                       S2
D1,2            C0,5    N0,0    S       G2      S1,1    S1,2
D0,1            W               P2              V0                      t0,5
                                d0,2
                                U0,18
D0,1            C1,5    N1,0    D0,0    P               V1
D0,3                    G6          r
R   T0,5
D1,1        W                           t1,5
D1,2            N0,0    P6      V0          T1,5
D1,3                d0,6    P
U0,12   G6
D1,2    D2          D0,0                r
D1,3                                R
D1,1                P6
N1,0    d0,6    P       V1
D1,1                U0,6    G6
D1,1    D2          D0,0                r
... F   ... ... ... ... ... ... ... ...
D1,1                                R
D1,3            N0,0            V0
D1,2                P6
d0,6    P
D1,1            N1,0        G4      V1
D0,1                U0,4
D1,3                D0,4                r
D0,2                                R
D1,2                        B3      B1,0
... ... ... ... ... ... F   ... ... ...
D1,3
D0,3            N1,0    P4          V1
d0,4
U0,5
D0,1                D0,4    P
D1,2                    G6          r
D1,1            N1,0    P6          V1  R
D0,2                d0,6    P
U0,3    G8
D0,3                D0,4                r
D0,2                                R
D0,3
D1,2
D0,2                P8
d0,8    P           B1,1
D0,1                U0,1    G4      B3
D1,2                D0,5                r
D1,2                                R
D0,3                            B1  B1,3
... ... ... ... ... ... ... F   ... ...
D1,3
D0,2
... ... ... ... F   ... ... ... ... ...

... ... ... ... ... F   ... ... ... ...
D1,1
... ... ... ... ... ... ... ... F   ...
D1,2
... ... ... F   ... ... ... ... ... ...
D1,2
D0,2
... ... ... ... ... ... ... ... ... F

... ... F   ... ... ... ... ... ... ...
D0,1
D1,1
F   ... ... ... ... ... ... ... ... ...
***********************

Anlysis:
-Parent donates to student 0 and 1 ammount 1 to 3$ every time.
-Groupoff gift 2 gift cards and finishes
-Watoffice when recieved note that student is registered, it creates a card for the student C0,5 =>create a card for student 0
Then, the card creation process is passed to cour
-Names: The only one machine is registered since there is only one machine. When a student is requesting for a machine, machine zero is passed back because there is only one machine available.
- Plant: Plant create 4-4x bottles, where x is the maxBlottlesPerFlavour(Gx). The plant only create new batch when the previous batch has been picked up by the truck
- Truck: created by plant, it picks up the same number of bottle as the plant create(Px), and delivers to vending machines in an increaing order (d0,6 d1,2...etc) 
-Student: Picks a favour soda  and ammount, If the card is lost, it requests the office to re-assign a card to the student. Student stays until all the required soda are bought.
-machine: Starts with Sx, where x is the price of soda. When a truck comes, it adds stock 'r' and when the restocking is complete, 'R' is printed. when a student makes purchase, it prints the flavour bough and the remainig amount.
